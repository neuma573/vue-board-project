<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.3</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.lguplus.medialog</groupId>
	<artifactId>vue-board-project</artifactId>
	<version>0.0.1</version>
	<name>vue-board-project</name>
	<packaging>war</packaging>
	<properties>
		<java.version>1.8</java.version>
		<frontend-maven-plugin.version>1.8.0</frontend-maven-plugin.version>
		<npmVersion>8.5.0</npmVersion>
	</properties>
	
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>2.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.bgee.log4jdbc-log4j2</groupId>
			<artifactId>log4jdbc-log4j2-jdbc4.1</artifactId>
			<version>1.16</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.10.10</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.11.0</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
		<dependency>
		    <groupId>commons-fileupload</groupId>
		    <artifactId>commons-fileupload</artifactId>
		    <version>1.4</version>
		</dependency>

		<!-- embedded tomcat 사용하지 않고 외부 tomcat에서 jsp 사용 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-taglibs</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.apache.tiles</groupId>
		    <artifactId>tiles-jsp</artifactId>
		    <version>3.0.8</version>
		</dependency>
	</dependencies>

    
<build>
	<plugins>
		<plugin>
			<groupId>com.github.eirslett</groupId>
			<artifactId>frontend-maven-plugin</artifactId>
			<version>${frontend-maven-plugin.version}</version>
            
			<configuration>
				<workingDirectory>front</workingDirectory>
			</configuration>
			
			<executions>
				<!-- Install our node and npm version to run npm/node scripts-->
				<execution>
					<id>install node and npm</id>
					<goals>
						<goal>install-node-and-npm</goal>
					</goals>
					<configuration>
						<nodeVersion>v16.14.2</nodeVersion>
					</configuration>
				</execution>
                
				<!-- Install all project dependencies -->
				<execution>
					<id>npm install</id>
					<goals>
						<goal>npm</goal>
					</goals>
					<!-- optional: default phase is "generate-resources" -->
					<phase>generate-resources</phase>
					<!-- Optional configuration which provides for running any npm command -->
					<configuration>
						<arguments>install</arguments>
					</configuration>
				
				
				
				
				
				</execution>
                
				<!-- Build and minify static files -->
				<execution>
					<id>npm run build</id>
					<goals>
						<goal>npm</goal>
					</goals>
					<configuration>
						<arguments>run build</arguments>
					</configuration>
				</execution>
                
				<!-- Run Unit tests with Jest -->
				<!-- 
				<execution>
					<id>npm run test:unit</id>
					<goals>
						<goal>npm</goal>
					</goals>
					<phase>test</phase>
					<configuration>
						<arguments>run test:unit</arguments>
					</configuration>
				</execution>
				 -->
                 
				<!-- Run End2End tests with Nightwatch -->
				<!--
				<execution>
				<id>npm run test:e2e</id>
				<goals>
					<goal>npm</goal>
				</goals>
				<phase>test</phase>
				<configuration>
				  	<arguments>run test:e2e</arguments>
				</configuration>
				</execution>
				-->
			</executions>
		</plugin>
			
		<plugin>
			<artifactId>maven-resources-plugin</artifactId>
			<executions>
				<execution>
					<id>Copy App Content, Templates ${project.basedir}</id>
					<phase>generate-resources</phase>
					<goals>
						<goal>copy-resources</goal>
					</goals>
					<configuration>
						<outputDirectory>${project.basedir}/src/main/resources/templates</outputDirectory>
						<overwrite>true</overwrite>
						<resources>
							<resource>
								<directory>${project.basedir}/src/front/dist</directory>
								<includes>
									<include>*.html</include>
								</includes>
							</resource>
						</resources>
					</configuration>
				</execution>

				<execution>
					<id>Copy App Content, Static</id>
					<phase>generate-resources</phase>
					<goals>
						<goal>copy-resources</goal>
					</goals>
					<configuration>
						<outputDirectory>${project.basedir}/src/main/resources/static</outputDirectory>
						<overwrite>true</overwrite>
						<resources>
							<resource>
								<directory>${project.basedir}/src/front/dist</directory>
								<includes>
									<include>css/</include>
									<include>js/</include>
									<include>img/</include>
									<include>favicon.ico</include>
								</includes>
							</resource>
						</resources>
					</configuration>
				</execution>
			</executions>
		</plugin>
            
		<plugin>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-maven-plugin</artifactId>
		</plugin>
					<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
	</plugins>



</build>	




</project>
